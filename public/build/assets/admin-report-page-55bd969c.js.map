{"version":3,"file":"admin-report-page-55bd969c.js","sources":["../../../common/resources/client/admin/analytics/use-admin-report.ts","../../../common/resources/client/admin/analytics/visitors-report-charts.tsx","../../../common/resources/client/admin/analytics/admin-header-report.tsx","../../../common/resources/client/admin/analytics/report-date-selector.tsx","../../../common/resources/client/admin/analytics/admin-report-page.tsx"],"sourcesContent":["import {keepPreviousData, useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {apiClient} from '../../http/query-client';\r\nimport {VisitorsReportData} from './visitors-report-data';\r\nimport {IconTree} from '../../icons/create-svg-icon';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {ReactElement} from 'react';\r\nimport {SvgIconProps} from '@common/icons/svg-icon';\r\n\r\nconst Endpoint = 'admin/reports';\r\n\r\nexport interface HeaderDatum {\r\n  icon: IconTree[] | ReactElement<SvgIconProps>;\r\n  name: string;\r\n  type?: 'number' | 'fileSize' | 'percentage';\r\n  currentValue: number;\r\n  previousValue?: number;\r\n  percentageChange?: number;\r\n}\r\n\r\ninterface FetchAnalyticsReportResponse extends BackendResponse {\r\n  visitorsReport: VisitorsReportData;\r\n  headerReport: HeaderDatum[];\r\n}\r\n\r\ninterface Payload {\r\n  types?: ('visitors' | 'header')[];\r\n  dateRange?: DateRangeValue;\r\n}\r\nexport function useAdminReport(payload: Payload = {}) {\r\n  return useQuery({\r\n    queryKey: [Endpoint, payload],\r\n    queryFn: () => fetchAnalyticsReport(payload),\r\n    placeholderData: keepPreviousData,\r\n  });\r\n}\r\n\r\nfunction fetchAnalyticsReport({\r\n  types,\r\n  dateRange,\r\n}: Payload): Promise<FetchAnalyticsReportResponse> {\r\n  const params: Record<string, any> = {};\r\n  if (types) {\r\n    params.types = types.join(',');\r\n  }\r\n  if (dateRange) {\r\n    params.startDate = dateRange.start.toAbsoluteString();\r\n    params.endDate = dateRange.end.toAbsoluteString();\r\n    params.timezone = dateRange.start.timeZone;\r\n  }\r\n  return apiClient.get(Endpoint, {params}).then(response => response.data);\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {LineChart} from '@common/charts/line-chart';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {PolarAreaChart} from '@common/charts/polar-area-chart';\r\nimport {BarChart} from '@common/charts/bar-chart';\r\nimport {VisitorsReportData} from '@common/admin/analytics/visitors-report-data';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport {GeoChart} from '@common/admin/analytics/geo-chart/geo-chart';\r\n\r\nexport const AdminReportPageColGap = 'gap-12 md:gap-24 mb-12 md:mb-24';\r\nconst rowClassName = `flex flex-col md:flex-row md:items-center overflow-x-auto ${AdminReportPageColGap}`;\r\n\r\ninterface AdminReportChartsProps {\r\n  report?: VisitorsReportData;\r\n  isLoading: boolean;\r\n}\r\nexport function VisitorsReportCharts({\r\n  report,\r\n  isLoading,\r\n}: AdminReportChartsProps) {\r\n  const totalViews = report?.pageViews.total;\r\n  return (\r\n    <Fragment>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {HeaderDatum} from '@common/admin/analytics/use-admin-report';\r\nimport React, {\r\n  cloneElement,\r\n  Fragment,\r\n  isValidElement,\r\n  ReactElement,\r\n} from 'react';\r\nimport {TrendingUpIcon} from '@common/icons/material/TrendingUp';\r\nimport {TrendingDownIcon} from '@common/icons/material/TrendingDown';\r\nimport {createSvgIconFromTree} from '@common/icons/create-svg-icon';\r\nimport {AdminReportPageColGap} from '@common/admin/analytics/visitors-report-charts';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport {FormattedBytes} from '@common/uploads/formatted-bytes';\r\nimport {TrendingFlatIcon} from '@common/icons/material/TrendingFlat';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\r\n\r\ninterface AdminHeaderReportProps {\r\n  report?: HeaderDatum[];\r\n  isLoading?: boolean;\r\n}\r\nexport function AdminHeaderReport({report, isLoading}: AdminHeaderReportProps) {\r\n  return (\r\n    <div\r\n      className={`flex h-[97px] flex-shrink-0 items-center overflow-x-auto ${AdminReportPageColGap}`}\r\n    >\r\n      {report?.map(datum => (\r\n        <ReportItem key={datum.name} datum={datum} isLoading={isLoading} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ValueMetricItemProps {\r\n  datum: HeaderDatum;\r\n  isLoading?: boolean;\r\n}\r\nfunction ReportItem({datum, isLoading = false}: ValueMetricItemProps) {\r\n  let icon;\r\n  if (isValidElement(datum.icon)) {\r\n    icon = cloneElement(datum.icon, {size: 'lg'});\r\n  } else {\r\n    const IconEl = createSvgIconFromTree(datum.icon);\r\n    icon = <IconEl size=\"lg\" />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      key={datum.name}\r\n      className=\"rounded-panel flex h-full flex-auto items-center gap-18 whitespace-nowrap border p-20\"\r\n    >\r\n      <div className=\"flex-shrink-0 rounded-lg bg-primary-light/20 p-10 text-primary\">\r\n        {icon}\r\n      </div>\r\n      <div className=\"flex-auto\">\r\n        <div className=\"flex items-center justify-between gap-20\">\r\n          <div className=\"text-lg font-bold text-main\">\r\n            <AnimatePresence initial={false} mode=\"wait\">\r\n              {isLoading ? (\r\n                <m.div key=\"skeleton\" {...opacityAnimation}>\r\n                  <Skeleton className=\"min-w-24\" />\r\n                </m.div>\r\n              ) : (\r\n                <m.div key=\"value\" {...opacityAnimation}>\r\n                  <FormattedValue datum={datum} />\r\n                </m.div>\r\n              )}\r\n            </AnimatePresence>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center justify-between gap-20\">\r\n          <h2 className=\"text-sm text-muted\">{datum.name}</h2>\r\n          {(datum.percentageChange != null || datum.previousValue != null) && (\r\n            <div className=\"flex items-center gap-10\">\r\n              <TrendingIndicator datum={datum} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface FormattedValueProps {\r\n  datum: HeaderDatum;\r\n}\r\nfunction FormattedValue({datum}: FormattedValueProps) {\r\n  switch (datum.type) {\r\n    case 'fileSize':\r\n      return <FormattedBytes bytes={datum.currentValue} />;\r\n    case 'percentage':\r\n      return (\r\n        <FormattedNumber\r\n          value={datum.currentValue}\r\n          style=\"percent\"\r\n          maximumFractionDigits={1}\r\n        />\r\n      );\r\n    default:\r\n      return <FormattedNumber value={datum.currentValue} />;\r\n  }\r\n}\r\n\r\ninterface TrendingIndicatorProps {\r\n  datum: HeaderDatum;\r\n}\r\nfunction TrendingIndicator({datum}: TrendingIndicatorProps) {\r\n  const percentage = calculatePercentage(datum);\r\n  let icon: ReactElement;\r\n  if (percentage > 0) {\r\n    icon = <TrendingUpIcon size=\"md\" className=\"text-positive\" />;\r\n  } else if (percentage === 0) {\r\n    icon = <TrendingFlatIcon className=\"text-muted\" />;\r\n  } else {\r\n    icon = <TrendingDownIcon className=\"text-danger\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {icon}\r\n      <div className=\"text-sm font-semibold text-muted\">{percentage}%</div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction calculatePercentage({\r\n  percentageChange,\r\n  previousValue,\r\n  currentValue,\r\n}: HeaderDatum) {\r\n  if (\r\n    percentageChange != null ||\r\n    previousValue == null ||\r\n    currentValue == null\r\n  ) {\r\n    return percentageChange ?? 0;\r\n  }\r\n\r\n  if (previousValue === 0) {\r\n    return 100;\r\n  }\r\n\r\n  return Math.round(((currentValue - previousValue) / previousValue) * 100);\r\n}\r\n","import {useDateRangePickerState} from '@common/ui/forms/input-field/date/date-range-picker/use-date-range-picker-state';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {DateRangeIcon} from '@common/icons/material/DateRange';\r\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\r\nimport {DateRangeDialog} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog';\r\nimport React from 'react';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {DateFormatPresets} from '@common/i18n/formatted-date';\r\nimport {DateRangeComparePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\r\nimport {Granularity} from '@common/ui/forms/input-field/date/date-picker/use-date-picker-state';\r\n\r\nconst monthDayFormat: Intl.DateTimeFormatOptions = {\r\n  month: 'short',\r\n  day: '2-digit',\r\n};\r\n\r\ninterface ReportDataSelectorProps {\r\n  value: DateRangeValue;\r\n  disabled?: boolean;\r\n  onChange: (value: DateRangeValue) => void;\r\n  compactOnMobile?: boolean;\r\n  enableCompare?: boolean;\r\n  granularity?: Granularity;\r\n}\r\nexport function ReportDateSelector({\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  compactOnMobile = true,\r\n  enableCompare = false,\r\n  granularity = 'minute',\r\n}: ReportDataSelectorProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  return (\r\n    <DialogTrigger\r\n      type=\"popover\"\r\n      onClose={value => {\r\n        if (value) {\r\n          onChange(value);\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outline\"\r\n        color=\"chip\"\r\n        endIcon={<DateRangeIcon />}\r\n        disabled={disabled}\r\n      >\r\n        <FormattedDateTimeRange\r\n          start={value.start}\r\n          end={value.end}\r\n          options={\r\n            isMobile && compactOnMobile\r\n              ? monthDayFormat\r\n              : DateFormatPresets.short\r\n          }\r\n        />\r\n      </Button>\r\n      <DateSelectorDialog\r\n        value={value}\r\n        enableCompare={enableCompare}\r\n        granularity={granularity}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface DateSelectorDialogProps {\r\n  value: DateRangeValue;\r\n  enableCompare: boolean;\r\n  granularity: Granularity;\r\n}\r\nfunction DateSelectorDialog({\r\n  value,\r\n  enableCompare,\r\n  granularity,\r\n}: DateSelectorDialogProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const state = useDateRangePickerState({\r\n    granularity,\r\n    defaultValue: {\r\n      start: value.start,\r\n      end: value.end,\r\n      preset: value.preset,\r\n    },\r\n    closeDialogOnSelection: false,\r\n  });\r\n  const compareHasInitialValue = !!value.compareStart && !!value.compareEnd;\r\n  const compareState = useDateRangePickerState({\r\n    granularity,\r\n    defaultValue: compareHasInitialValue\r\n      ? {\r\n          start: value.compareStart,\r\n          end: value.compareEnd,\r\n          preset: value.comparePreset,\r\n        }\r\n      : DateRangeComparePresets[0].getRangeValue(state.selectedValue),\r\n  });\r\n  return (\r\n    <DateRangeDialog\r\n      state={state}\r\n      compareState={enableCompare ? compareState : undefined}\r\n      compareVisibleDefault={compareHasInitialValue}\r\n      showInlineDatePickerField={!isMobile}\r\n    />\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useAdminReport} from './use-admin-report';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {StaticPageTitle} from '../../seo/static-page-title';\r\nimport {AdminHeaderReport} from '@common/admin/analytics/admin-header-report';\r\nimport {VisitorsReportCharts} from '@common/admin/analytics/visitors-report-charts';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\r\nimport {ReportDateSelector} from '@common/admin/analytics/report-date-selector';\r\nimport { useAuth } from '@common/auth/use-auth';\r\n\r\nexport default function AdminReportPage() {\r\n  const [dateRange, setDateRange] = useState<DateRangeValue>(() => {\r\n    // This week\r\n    return DateRangePresets[2].getRangeValue();\r\n  });\r\n  const {isLoading, data} = useAdminReport({dateRange});\r\n  console.log(\"analadata\",data)\r\n  const title = <Trans message=\"Visitors report\" />;\r\n\r\n  //super_admin show the data\r\n  const {user} = useAuth()\r\n  const isSuperAdmin = user?.user_type === 'super_admin';\r\n  const userName = user?.first_name || 'User';\r\n\r\n  return (\r\n    <div className=\"min-h-full gap-12 overflow-x-hidden p-12 md:gap-24 md:p-24\">\r\n      <div className=\"mb-24 items-center justify-between gap-24 md:flex\">\r\n        <StaticPageTitle>{title}</StaticPageTitle>\r\n        {isSuperAdmin && (\r\n          <h1 className=\"mb-24 text-3xl font-light md:mb-0\">{title}</h1>\r\n        )}\r\n        {!isSuperAdmin && (\r\n          <>\r\n            <h1 className=\"mb-24 text-3xl font-light md:mb-0\">Welcome back <b>{userName}</b></h1>\r\n          </>\r\n        )}\r\n        <ReportDateSelector value={dateRange} onChange={setDateRange} />\r\n      </div>\r\n      {/* <AdminHeaderReport report={data?.headerReport} /> */}\r\n      {/* {isSuperAdmin && (\r\n        <AdminHeaderReport report={data?.headerReport} />\r\n      )} */}\r\n      <AdminHeaderReport report={data?.headerReport} />\r\n      <VisitorsReportCharts \r\n        report={data?.visitorsReport}\r\n        isLoading={isLoading}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Endpoint","useAdminReport","payload","useQuery","fetchAnalyticsReport","keepPreviousData","types","dateRange","params","apiClient","response","AdminReportPageColGap","VisitorsReportCharts","report","isLoading","Fragment","AdminHeaderReport","jsx","datum","ReportItem","icon","isValidElement","cloneElement","IconEl","createSvgIconFromTree","jsxs","AnimatePresence","opacityAnimation","Skeleton","FormattedValue","TrendingIndicator","FormattedBytes","FormattedNumber","percentage","calculatePercentage","TrendingUpIcon","TrendingFlatIcon","TrendingDownIcon","percentageChange","previousValue","currentValue","monthDayFormat","ReportDateSelector","value","onChange","disabled","compactOnMobile","enableCompare","granularity","isMobile","useIsMobileMediaQuery","DialogTrigger","Button","DateRangeIcon","FormattedDateTimeRange","DateFormatPresets","DateSelectorDialog","state","useDateRangePickerState","compareHasInitialValue","compareState","DateRangeComparePresets","DateRangeDialog","AdminReportPage","setDateRange","useState","DateRangePresets","data","title","Trans","user","useAuth","isSuperAdmin","userName","StaticPageTitle"],"mappings":"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"}