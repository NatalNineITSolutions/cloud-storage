{"version":3,"file":"admin-report-page-8b3481bf.js","sources":["../../../common/resources/client/admin/analytics/use-admin-report.ts","../../../common/resources/client/admin/analytics/visitors-report-charts.tsx","../../../common/resources/client/admin/analytics/admin-header-report.tsx","../../../common/resources/client/admin/analytics/report-date-selector.tsx","../../../common/resources/client/admin/analytics/admin-report-page.tsx"],"sourcesContent":["import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient} from '../../http/query-client';\nimport {VisitorsReportData} from './visitors-report-data';\nimport {IconTree} from '../../icons/create-svg-icon';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {ReactElement} from 'react';\nimport {SvgIconProps} from '@common/icons/svg-icon';\n\nconst Endpoint = 'admin/reports';\n\nexport interface HeaderDatum {\n  icon: IconTree[] | ReactElement<SvgIconProps>;\n  name: string;\n  type?: 'number' | 'fileSize' | 'percentage';\n  currentValue: number;\n  previousValue?: number;\n  percentageChange?: number;\n}\n\ninterface FetchAnalyticsReportResponse extends BackendResponse {\n  visitorsReport: VisitorsReportData;\n  headerReport: HeaderDatum[];\n}\n\ninterface Payload {\n  types?: ('visitors' | 'header')[];\n  dateRange?: DateRangeValue;\n}\nexport function useAdminReport(payload: Payload = {}) {\n  return useQuery({\n    queryKey: [Endpoint, payload],\n    queryFn: () => fetchAnalyticsReport(payload),\n    placeholderData: keepPreviousData,\n  });\n}\n\nfunction fetchAnalyticsReport({\n  types,\n  dateRange,\n}: Payload): Promise<FetchAnalyticsReportResponse> {\n  const params: Record<string, any> = {};\n  if (types) {\n    params.types = types.join(',');\n  }\n  if (dateRange) {\n    params.startDate = dateRange.start.toAbsoluteString();\n    params.endDate = dateRange.end.toAbsoluteString();\n    params.timezone = dateRange.start.timeZone;\n  }\n  return apiClient.get(Endpoint, {params}).then(response => response.data);\n}\n","import React, {Fragment} from 'react';\nimport {LineChart} from '@common/charts/line-chart';\nimport {Trans} from '@common/i18n/trans';\nimport {PolarAreaChart} from '@common/charts/polar-area-chart';\nimport {BarChart} from '@common/charts/bar-chart';\nimport {VisitorsReportData} from '@common/admin/analytics/visitors-report-data';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\nimport {GeoChart} from '@common/admin/analytics/geo-chart/geo-chart';\n\nexport const AdminReportPageColGap = 'gap-12 md:gap-24 mb-12 md:mb-24';\nconst rowClassName = `flex flex-col md:flex-row md:items-center overflow-x-auto ${AdminReportPageColGap}`;\n\ninterface AdminReportChartsProps {\n  report?: VisitorsReportData;\n  isLoading: boolean;\n}\nexport function VisitorsReportCharts({\n  report,\n  isLoading,\n}: AdminReportChartsProps) {\n  const totalViews = report?.pageViews.total;\n  return (\n    <Fragment>\n    </Fragment>\n  );\n}\n","import {HeaderDatum} from '@common/admin/analytics/use-admin-report';\nimport React, {\n  cloneElement,\n  Fragment,\n  isValidElement,\n  ReactElement,\n} from 'react';\nimport {TrendingUpIcon} from '@common/icons/material/TrendingUp';\nimport {TrendingDownIcon} from '@common/icons/material/TrendingDown';\nimport {createSvgIconFromTree} from '@common/icons/create-svg-icon';\nimport {AdminReportPageColGap} from '@common/admin/analytics/visitors-report-charts';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\nimport {FormattedBytes} from '@common/uploads/formatted-bytes';\nimport {TrendingFlatIcon} from '@common/icons/material/TrendingFlat';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\n\ninterface AdminHeaderReportProps {\n  report?: HeaderDatum[];\n  isLoading?: boolean;\n}\nexport function AdminHeaderReport({report, isLoading}: AdminHeaderReportProps) {\n  return (\n    <div\n      className={`flex h-[97px] flex-shrink-0 items-center overflow-x-auto ${AdminReportPageColGap}`}\n    >\n      {report?.map(datum => (\n        <ReportItem key={datum.name} datum={datum} isLoading={isLoading} />\n      ))}\n    </div>\n  );\n}\n\ninterface ValueMetricItemProps {\n  datum: HeaderDatum;\n  isLoading?: boolean;\n}\nfunction ReportItem({datum, isLoading = false}: ValueMetricItemProps) {\n  let icon;\n  if (isValidElement(datum.icon)) {\n    icon = cloneElement(datum.icon, {size: 'lg'});\n  } else {\n    const IconEl = createSvgIconFromTree(datum.icon);\n    icon = <IconEl size=\"lg\" />;\n  }\n\n  return (\n    <div\n      key={datum.name}\n      className=\"rounded-panel flex h-full flex-auto items-center gap-18 whitespace-nowrap border p-20\"\n    >\n      <div className=\"flex-shrink-0 rounded-lg bg-primary-light/20 p-10 text-primary\">\n        {icon}\n      </div>\n      <div className=\"flex-auto\">\n        <div className=\"flex items-center justify-between gap-20\">\n          <div className=\"text-lg font-bold text-main\">\n            <AnimatePresence initial={false} mode=\"wait\">\n              {isLoading ? (\n                <m.div key=\"skeleton\" {...opacityAnimation}>\n                  <Skeleton className=\"min-w-24\" />\n                </m.div>\n              ) : (\n                <m.div key=\"value\" {...opacityAnimation}>\n                  <FormattedValue datum={datum} />\n                </m.div>\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between gap-20\">\n          <h2 className=\"text-sm text-muted\">{datum.name}</h2>\n          {(datum.percentageChange != null || datum.previousValue != null) && (\n            <div className=\"flex items-center gap-10\">\n              <TrendingIndicator datum={datum} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface FormattedValueProps {\n  datum: HeaderDatum;\n}\nfunction FormattedValue({datum}: FormattedValueProps) {\n  switch (datum.type) {\n    case 'fileSize':\n      return <FormattedBytes bytes={datum.currentValue} />;\n    case 'percentage':\n      return (\n        <FormattedNumber\n          value={datum.currentValue}\n          style=\"percent\"\n          maximumFractionDigits={1}\n        />\n      );\n    default:\n      return <FormattedNumber value={datum.currentValue} />;\n  }\n}\n\ninterface TrendingIndicatorProps {\n  datum: HeaderDatum;\n}\nfunction TrendingIndicator({datum}: TrendingIndicatorProps) {\n  const percentage = calculatePercentage(datum);\n  let icon: ReactElement;\n  if (percentage > 0) {\n    icon = <TrendingUpIcon size=\"md\" className=\"text-positive\" />;\n  } else if (percentage === 0) {\n    icon = <TrendingFlatIcon className=\"text-muted\" />;\n  } else {\n    icon = <TrendingDownIcon className=\"text-danger\" />;\n  }\n\n  return (\n    <Fragment>\n      {icon}\n      <div className=\"text-sm font-semibold text-muted\">{percentage}%</div>\n    </Fragment>\n  );\n}\n\nfunction calculatePercentage({\n  percentageChange,\n  previousValue,\n  currentValue,\n}: HeaderDatum) {\n  if (\n    percentageChange != null ||\n    previousValue == null ||\n    currentValue == null\n  ) {\n    return percentageChange ?? 0;\n  }\n\n  if (previousValue === 0) {\n    return 100;\n  }\n\n  return Math.round(((currentValue - previousValue) / previousValue) * 100);\n}\n","import {useDateRangePickerState} from '@common/ui/forms/input-field/date/date-range-picker/use-date-range-picker-state';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {Button} from '@common/ui/buttons/button';\nimport {DateRangeIcon} from '@common/icons/material/DateRange';\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\nimport {DateRangeDialog} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog';\nimport React from 'react';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {DateFormatPresets} from '@common/i18n/formatted-date';\nimport {DateRangeComparePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\nimport {Granularity} from '@common/ui/forms/input-field/date/date-picker/use-date-picker-state';\n\nconst monthDayFormat: Intl.DateTimeFormatOptions = {\n  month: 'short',\n  day: '2-digit',\n};\n\ninterface ReportDataSelectorProps {\n  value: DateRangeValue;\n  disabled?: boolean;\n  onChange: (value: DateRangeValue) => void;\n  compactOnMobile?: boolean;\n  enableCompare?: boolean;\n  granularity?: Granularity;\n}\nexport function ReportDateSelector({\n  value,\n  onChange,\n  disabled,\n  compactOnMobile = true,\n  enableCompare = false,\n  granularity = 'minute',\n}: ReportDataSelectorProps) {\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <DialogTrigger\n      type=\"popover\"\n      onClose={value => {\n        if (value) {\n          onChange(value);\n        }\n      }}\n    >\n      <Button\n        variant=\"outline\"\n        color=\"chip\"\n        endIcon={<DateRangeIcon />}\n        disabled={disabled}\n      >\n        <FormattedDateTimeRange\n          start={value.start}\n          end={value.end}\n          options={\n            isMobile && compactOnMobile\n              ? monthDayFormat\n              : DateFormatPresets.short\n          }\n        />\n      </Button>\n      <DateSelectorDialog\n        value={value}\n        enableCompare={enableCompare}\n        granularity={granularity}\n      />\n    </DialogTrigger>\n  );\n}\n\ninterface DateSelectorDialogProps {\n  value: DateRangeValue;\n  enableCompare: boolean;\n  granularity: Granularity;\n}\nfunction DateSelectorDialog({\n  value,\n  enableCompare,\n  granularity,\n}: DateSelectorDialogProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const state = useDateRangePickerState({\n    granularity,\n    defaultValue: {\n      start: value.start,\n      end: value.end,\n      preset: value.preset,\n    },\n    closeDialogOnSelection: false,\n  });\n  const compareHasInitialValue = !!value.compareStart && !!value.compareEnd;\n  const compareState = useDateRangePickerState({\n    granularity,\n    defaultValue: compareHasInitialValue\n      ? {\n          start: value.compareStart,\n          end: value.compareEnd,\n          preset: value.comparePreset,\n        }\n      : DateRangeComparePresets[0].getRangeValue(state.selectedValue),\n  });\n  return (\n    <DateRangeDialog\n      state={state}\n      compareState={enableCompare ? compareState : undefined}\n      compareVisibleDefault={compareHasInitialValue}\n      showInlineDatePickerField={!isMobile}\n    />\n  );\n}\n","import React, {useState} from 'react';\nimport {useAdminReport} from './use-admin-report';\nimport {Trans} from '../../i18n/trans';\nimport {StaticPageTitle} from '../../seo/static-page-title';\nimport {AdminHeaderReport} from '@common/admin/analytics/admin-header-report';\nimport {VisitorsReportCharts} from '@common/admin/analytics/visitors-report-charts';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {ReportDateSelector} from '@common/admin/analytics/report-date-selector';\n\nexport default function AdminReportPage() {\n  const [dateRange, setDateRange] = useState<DateRangeValue>(() => {\n    // This week\n    return DateRangePresets[2].getRangeValue();\n  });\n  const {isLoading, data} = useAdminReport({dateRange});\n  const title = <Trans message=\"Visitors report\" />;\n\n  return (\n    <div className=\"min-h-full gap-12 overflow-x-hidden p-12 md:gap-24 md:p-24\">\n      <div className=\"mb-24 items-center justify-between gap-24 md:flex\">\n        <StaticPageTitle>{title}</StaticPageTitle>\n        <h1 className=\"mb-24 text-3xl font-light md:mb-0\">{title}</h1>\n        <ReportDateSelector value={dateRange} onChange={setDateRange} />\n      </div>\n      <AdminHeaderReport report={data?.headerReport} />\n      <VisitorsReportCharts\n        report={data?.visitorsReport}\n        isLoading={isLoading}\n      />\n    </div>\n  );\n}\n"],"names":["Endpoint","useAdminReport","payload","useQuery","fetchAnalyticsReport","keepPreviousData","types","dateRange","params","apiClient","response","AdminReportPageColGap","VisitorsReportCharts","report","isLoading","Fragment","AdminHeaderReport","jsx","datum","ReportItem","icon","isValidElement","cloneElement","IconEl","createSvgIconFromTree","jsxs","AnimatePresence","opacityAnimation","Skeleton","FormattedValue","TrendingIndicator","FormattedBytes","FormattedNumber","percentage","calculatePercentage","TrendingUpIcon","TrendingFlatIcon","TrendingDownIcon","percentageChange","previousValue","currentValue","monthDayFormat","ReportDateSelector","value","onChange","disabled","compactOnMobile","enableCompare","granularity","isMobile","useIsMobileMediaQuery","DialogTrigger","Button","DateRangeIcon","FormattedDateTimeRange","DateFormatPresets","DateSelectorDialog","state","useDateRangePickerState","compareHasInitialValue","compareState","DateRangeComparePresets","DateRangeDialog","AdminReportPage","setDateRange","useState","DateRangePresets","data","title","Trans","StaticPageTitle"],"mappings":"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"}