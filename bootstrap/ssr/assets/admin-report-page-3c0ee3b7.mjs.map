{"version":3,"file":"admin-report-page-3c0ee3b7.mjs","sources":["../../../common/resources/client/admin/analytics/use-admin-report.ts","../../../common/resources/client/admin/analytics/visitors-report-charts.tsx","../../../common/resources/client/admin/analytics/admin-header-report.tsx","../../../common/resources/client/admin/analytics/report-date-selector.tsx","../../../common/resources/client/admin/analytics/admin-report-page.tsx"],"sourcesContent":["import {keepPreviousData, useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {apiClient} from '../../http/query-client';\r\nimport {VisitorsReportData} from './visitors-report-data';\r\nimport {IconTree} from '../../icons/create-svg-icon';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {ReactElement} from 'react';\r\nimport {SvgIconProps} from '@common/icons/svg-icon';\r\n\r\nconst Endpoint = 'admin/reports';\r\n\r\nexport interface HeaderDatum {\r\n  icon: IconTree[] | ReactElement<SvgIconProps>;\r\n  name: string;\r\n  type?: 'number' | 'fileSize' | 'percentage';\r\n  currentValue: number;\r\n  previousValue?: number;\r\n  percentageChange?: number;\r\n}\r\n\r\ninterface FetchAnalyticsReportResponse extends BackendResponse {\r\n  visitorsReport: VisitorsReportData;\r\n  headerReport: HeaderDatum[];\r\n}\r\n\r\ninterface Payload {\r\n  types?: ('visitors' | 'header')[];\r\n  dateRange?: DateRangeValue;\r\n}\r\nexport function useAdminReport(payload: Payload = {}) {\r\n  return useQuery({\r\n    queryKey: [Endpoint, payload],\r\n    queryFn: () => fetchAnalyticsReport(payload),\r\n    placeholderData: keepPreviousData,\r\n  });\r\n}\r\n\r\nfunction fetchAnalyticsReport({\r\n  types,\r\n  dateRange,\r\n}: Payload): Promise<FetchAnalyticsReportResponse> {\r\n  const params: Record<string, any> = {};\r\n  if (types) {\r\n    params.types = types.join(',');\r\n  }\r\n  if (dateRange) {\r\n    params.startDate = dateRange.start.toAbsoluteString();\r\n    params.endDate = dateRange.end.toAbsoluteString();\r\n    params.timezone = dateRange.start.timeZone;\r\n  }\r\n  return apiClient.get(Endpoint, {params}).then(response => response.data);\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {LineChart} from '@common/charts/line-chart';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {PolarAreaChart} from '@common/charts/polar-area-chart';\r\nimport {BarChart} from '@common/charts/bar-chart';\r\nimport {VisitorsReportData} from '@common/admin/analytics/visitors-report-data';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport {GeoChart} from '@common/admin/analytics/geo-chart/geo-chart';\r\n\r\nexport const AdminReportPageColGap = 'gap-12 md:gap-24 mb-12 md:mb-24';\r\nconst rowClassName = `flex flex-col md:flex-row md:items-center overflow-x-auto ${AdminReportPageColGap}`;\r\n\r\ninterface AdminReportChartsProps {\r\n  report?: VisitorsReportData;\r\n  isLoading: boolean;\r\n}\r\nexport function VisitorsReportCharts({\r\n  report,\r\n  isLoading,\r\n}: AdminReportChartsProps) {\r\n  const totalViews = report?.pageViews.total;\r\n  return (\r\n    <Fragment>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {HeaderDatum} from '@common/admin/analytics/use-admin-report';\r\nimport React, {\r\n  cloneElement,\r\n  Fragment,\r\n  isValidElement,\r\n  ReactElement,\r\n} from 'react';\r\nimport {TrendingUpIcon} from '@common/icons/material/TrendingUp';\r\nimport {TrendingDownIcon} from '@common/icons/material/TrendingDown';\r\nimport {createSvgIconFromTree} from '@common/icons/create-svg-icon';\r\nimport {AdminReportPageColGap} from '@common/admin/analytics/visitors-report-charts';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport {FormattedBytes} from '@common/uploads/formatted-bytes';\r\nimport {TrendingFlatIcon} from '@common/icons/material/TrendingFlat';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\r\n\r\ninterface AdminHeaderReportProps {\r\n  report?: HeaderDatum[];\r\n  isLoading?: boolean;\r\n}\r\nexport function AdminHeaderReport({report, isLoading}: AdminHeaderReportProps) {\r\n  return (\r\n    <div\r\n      className={`flex h-[97px] flex-shrink-0 items-center overflow-x-auto ${AdminReportPageColGap}`}\r\n    >\r\n      {report?.map(datum => (\r\n        <ReportItem key={datum.name} datum={datum} isLoading={isLoading} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ValueMetricItemProps {\r\n  datum: HeaderDatum;\r\n  isLoading?: boolean;\r\n}\r\nfunction ReportItem({datum, isLoading = false}: ValueMetricItemProps) {\r\n  let icon;\r\n  if (isValidElement(datum.icon)) {\r\n    icon = cloneElement(datum.icon, {size: 'lg'});\r\n  } else {\r\n    const IconEl = createSvgIconFromTree(datum.icon);\r\n    icon = <IconEl size=\"lg\" />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      key={datum.name}\r\n      className=\"rounded-panel flex h-full flex-auto items-center gap-18 whitespace-nowrap border p-20\"\r\n    >\r\n      <div className=\"flex-shrink-0 rounded-lg bg-primary-light/20 p-10 text-primary\">\r\n        {icon}\r\n      </div>\r\n      <div className=\"flex-auto\">\r\n        <div className=\"flex items-center justify-between gap-20\">\r\n          <div className=\"text-lg font-bold text-main\">\r\n            <AnimatePresence initial={false} mode=\"wait\">\r\n              {isLoading ? (\r\n                <m.div key=\"skeleton\" {...opacityAnimation}>\r\n                  <Skeleton className=\"min-w-24\" />\r\n                </m.div>\r\n              ) : (\r\n                <m.div key=\"value\" {...opacityAnimation}>\r\n                  <FormattedValue datum={datum} />\r\n                </m.div>\r\n              )}\r\n            </AnimatePresence>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center justify-between gap-20\">\r\n          <h2 className=\"text-sm text-muted\">{datum.name}</h2>\r\n          {(datum.percentageChange != null || datum.previousValue != null) && (\r\n            <div className=\"flex items-center gap-10\">\r\n              <TrendingIndicator datum={datum} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface FormattedValueProps {\r\n  datum: HeaderDatum;\r\n}\r\nfunction FormattedValue({datum}: FormattedValueProps) {\r\n  switch (datum.type) {\r\n    case 'fileSize':\r\n      return <FormattedBytes bytes={datum.currentValue} />;\r\n    case 'percentage':\r\n      return (\r\n        <FormattedNumber\r\n          value={datum.currentValue}\r\n          style=\"percent\"\r\n          maximumFractionDigits={1}\r\n        />\r\n      );\r\n    default:\r\n      return <FormattedNumber value={datum.currentValue} />;\r\n  }\r\n}\r\n\r\ninterface TrendingIndicatorProps {\r\n  datum: HeaderDatum;\r\n}\r\nfunction TrendingIndicator({datum}: TrendingIndicatorProps) {\r\n  const percentage = calculatePercentage(datum);\r\n  let icon: ReactElement;\r\n  if (percentage > 0) {\r\n    icon = <TrendingUpIcon size=\"md\" className=\"text-positive\" />;\r\n  } else if (percentage === 0) {\r\n    icon = <TrendingFlatIcon className=\"text-muted\" />;\r\n  } else {\r\n    icon = <TrendingDownIcon className=\"text-danger\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {icon}\r\n      <div className=\"text-sm font-semibold text-muted\">{percentage}%</div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction calculatePercentage({\r\n  percentageChange,\r\n  previousValue,\r\n  currentValue,\r\n}: HeaderDatum) {\r\n  if (\r\n    percentageChange != null ||\r\n    previousValue == null ||\r\n    currentValue == null\r\n  ) {\r\n    return percentageChange ?? 0;\r\n  }\r\n\r\n  if (previousValue === 0) {\r\n    return 100;\r\n  }\r\n\r\n  return Math.round(((currentValue - previousValue) / previousValue) * 100);\r\n}\r\n","import {useDateRangePickerState} from '@common/ui/forms/input-field/date/date-range-picker/use-date-range-picker-state';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {DateRangeIcon} from '@common/icons/material/DateRange';\r\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\r\nimport {DateRangeDialog} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog';\r\nimport React from 'react';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {DateFormatPresets} from '@common/i18n/formatted-date';\r\nimport {DateRangeComparePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\r\nimport {Granularity} from '@common/ui/forms/input-field/date/date-picker/use-date-picker-state';\r\n\r\nconst monthDayFormat: Intl.DateTimeFormatOptions = {\r\n  month: 'short',\r\n  day: '2-digit',\r\n};\r\n\r\ninterface ReportDataSelectorProps {\r\n  value: DateRangeValue;\r\n  disabled?: boolean;\r\n  onChange: (value: DateRangeValue) => void;\r\n  compactOnMobile?: boolean;\r\n  enableCompare?: boolean;\r\n  granularity?: Granularity;\r\n}\r\nexport function ReportDateSelector({\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  compactOnMobile = true,\r\n  enableCompare = false,\r\n  granularity = 'minute',\r\n}: ReportDataSelectorProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  return (\r\n    <DialogTrigger\r\n      type=\"popover\"\r\n      onClose={value => {\r\n        if (value) {\r\n          onChange(value);\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outline\"\r\n        color=\"chip\"\r\n        endIcon={<DateRangeIcon />}\r\n        disabled={disabled}\r\n      >\r\n        <FormattedDateTimeRange\r\n          start={value.start}\r\n          end={value.end}\r\n          options={\r\n            isMobile && compactOnMobile\r\n              ? monthDayFormat\r\n              : DateFormatPresets.short\r\n          }\r\n        />\r\n      </Button>\r\n      <DateSelectorDialog\r\n        value={value}\r\n        enableCompare={enableCompare}\r\n        granularity={granularity}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface DateSelectorDialogProps {\r\n  value: DateRangeValue;\r\n  enableCompare: boolean;\r\n  granularity: Granularity;\r\n}\r\nfunction DateSelectorDialog({\r\n  value,\r\n  enableCompare,\r\n  granularity,\r\n}: DateSelectorDialogProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const state = useDateRangePickerState({\r\n    granularity,\r\n    defaultValue: {\r\n      start: value.start,\r\n      end: value.end,\r\n      preset: value.preset,\r\n    },\r\n    closeDialogOnSelection: false,\r\n  });\r\n  const compareHasInitialValue = !!value.compareStart && !!value.compareEnd;\r\n  const compareState = useDateRangePickerState({\r\n    granularity,\r\n    defaultValue: compareHasInitialValue\r\n      ? {\r\n          start: value.compareStart,\r\n          end: value.compareEnd,\r\n          preset: value.comparePreset,\r\n        }\r\n      : DateRangeComparePresets[0].getRangeValue(state.selectedValue),\r\n  });\r\n  return (\r\n    <DateRangeDialog\r\n      state={state}\r\n      compareState={enableCompare ? compareState : undefined}\r\n      compareVisibleDefault={compareHasInitialValue}\r\n      showInlineDatePickerField={!isMobile}\r\n    />\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useAdminReport} from './use-admin-report';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {StaticPageTitle} from '../../seo/static-page-title';\r\nimport {AdminHeaderReport} from '@common/admin/analytics/admin-header-report';\r\nimport {VisitorsReportCharts} from '@common/admin/analytics/visitors-report-charts';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\r\nimport {ReportDateSelector} from '@common/admin/analytics/report-date-selector';\r\nimport { useAuth } from '@common/auth/use-auth';\r\n\r\nexport default function AdminReportPage() {\r\n  const [dateRange, setDateRange] = useState<DateRangeValue>(() => {\r\n    // This week\r\n    return DateRangePresets[2].getRangeValue();\r\n  });\r\n  const {isLoading, data} = useAdminReport({dateRange});\r\n  console.log(\"analadata\",data)\r\n  const title = <Trans message=\"Visitors report\" />;\r\n\r\n  //super_admin show the data\r\n  const {user} = useAuth()\r\n  const isSuperAdmin = user?.user_type === 'super_admin';\r\n  const userName = user?.first_name || 'User';\r\n\r\n  return (\r\n    <div className=\"min-h-full gap-12 overflow-x-hidden p-12 md:gap-24 md:p-24\">\r\n      <div className=\"mb-24 items-center justify-between gap-24 md:flex\">\r\n        <StaticPageTitle>{title}</StaticPageTitle>\r\n        {isSuperAdmin && (\r\n          <h1 className=\"mb-24 text-3xl font-light md:mb-0\">{title}</h1>\r\n        )}\r\n        {!isSuperAdmin && (\r\n          <>\r\n            <h1 className=\"mb-24 text-3xl font-light md:mb-0\">Welcome back <b>{userName}</b></h1>\r\n          </>\r\n        )}\r\n        <ReportDateSelector value={dateRange} onChange={setDateRange} />\r\n      </div>\r\n      {/* <AdminHeaderReport report={data?.headerReport} /> */}\r\n      {/* {isSuperAdmin && (\r\n        <AdminHeaderReport report={data?.headerReport} />\r\n      )} */}\r\n      <AdminHeaderReport report={data?.headerReport} />\r\n      <VisitorsReportCharts \r\n        report={data?.visitorsReport}\r\n        isLoading={isLoading}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["value","Fragment"],"mappings":"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"}