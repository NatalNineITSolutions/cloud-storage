{"version":3,"file":"use-resume-subscription-8a9e2163.mjs","sources":["../../../common/resources/client/billing/billing-page/requests/use-cancel-subscription.ts","../../../common/resources/client/billing/billing-page/requests/use-resume-subscription.ts"],"sourcesContent":["import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '../../../http/query-client';\r\nimport {useTrans} from '../../../i18n/use-trans';\r\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {message} from '../../../i18n/message';\r\nimport {User} from '../../../auth/user';\r\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  user: User;\r\n}\r\n\r\ninterface Payload {\r\n  subscriptionId: number;\r\n  delete?: boolean;\r\n}\r\n\r\nexport function useCancelSubscription() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (props: Payload) => cancelSubscription(props),\r\n    onSuccess: (response, payload) => {\r\n      toast(\r\n        payload.delete\r\n          ? trans(message('Subscription deleted.'))\r\n          : trans(message('Subscription cancelled.')),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction cancelSubscription({\r\n  subscriptionId,\r\n  ...payload\r\n}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post(`billing/subscriptions/${subscriptionId}/cancel`, payload)\r\n    .then(r => r.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '../../../http/query-client';\r\nimport {useTrans} from '../../../i18n/use-trans';\r\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {message} from '../../../i18n/message';\r\nimport {User} from '../../../auth/user';\r\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  user: User;\r\n}\r\n\r\ninterface Payload {\r\n  subscriptionId: number;\r\n}\r\n\r\nexport function useResumeSubscription() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (props: Payload) => resumeSubscription(props),\r\n    onSuccess: () => {\r\n      toast(trans(message('Subscription renewed.')));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction resumeSubscription({subscriptionId}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post(`billing/subscriptions/${subscriptionId}/resume`)\r\n    .then(r => r.data);\r\n}\r\n"],"names":[],"mappings":";;AAkBO,SAAS,wBAAwB;AAChC,QAAA,EAAC,UAAS;AAChB,SAAO,YAAY;AAAA,IACjB,YAAY,CAAC,UAAmB,mBAAmB,KAAK;AAAA,IACxD,WAAW,CAAC,UAAU,YAAY;AAChC;AAAA,QACE,QAAQ,SACJ,MAAM,QAAQ,uBAAuB,CAAC,IACtC,MAAM,QAAQ,yBAAyB,CAAC;AAAA,MAAA;AAAA,IAEhD;AAAA,IACA,SAAS,CAAO,QAAA,mBAAmB,GAAG;AAAA,EAAA,CACvC;AACH;AAEA,SAAS,mBAAmB;AAAA,EAC1B;AAAA,EACA,GAAG;AACL,GAA+B;AACtB,SAAA,UACJ,KAAK,yBAAyB,cAAc,WAAW,OAAO,EAC9D,KAAK,CAAK,MAAA,EAAE,IAAI;AACrB;ACvBO,SAAS,wBAAwB;AAChC,QAAA,EAAC,UAAS;AAChB,SAAO,YAAY;AAAA,IACjB,YAAY,CAAC,UAAmB,mBAAmB,KAAK;AAAA,IACxD,WAAW,MAAM;AACf,YAAM,MAAM,QAAQ,uBAAuB,CAAC,CAAC;AAAA,IAC/C;AAAA,IACA,SAAS,CAAO,QAAA,mBAAmB,GAAG;AAAA,EAAA,CACvC;AACH;AAEA,SAAS,mBAAmB,EAAC,kBAA6C;AACjE,SAAA,UACJ,KAAK,yBAAyB,cAAc,SAAS,EACrD,KAAK,CAAK,MAAA,EAAE,IAAI;AACrB;"}